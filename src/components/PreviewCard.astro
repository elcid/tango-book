---
interface Props {
  title: string;
  content: string;
  image: string;
  videoUrl: string;
  videoCaption?: string;
  imageCaption?: string;
  padding?: string;
  shadow?: string;
  rounded?: string;
  imageRounded?: string;
  hoverEffect?: boolean;
  aspectRatio?: string;
}

const {
  title,
  content,
  image,
  videoUrl,
  videoCaption,
  imageCaption,
  padding = "p-4 md:p-6",
  shadow = "shadow-md",
  rounded = "rounded-lg",
  imageRounded = "rounded-lg",
  hoverEffect = true,
  aspectRatio = "aspect-[16/9]"
} = Astro.props;
---

<div class={`bg-white ${padding} ${rounded} ${shadow} ${hoverEffect ? 'hover:shadow-lg transition-shadow duration-300' : ''}`}>
    <div class={`relative ${aspectRatio} mb-4`}>
        <img
                src={image}
                alt={imageCaption || title}
                class={`w-full h-full object-cover ${imageRounded}`}
                loading="lazy"
        />
        {imageCaption && (
                <p class="absolute bottom-2 left-2 text-white text-xs md:text-sm bg-black bg-opacity-50 px-2 py-1 rounded">
                    {imageCaption}
                </p>
        )}
    </div>
    <h3 class="text-lg md:text-xl font-semibold mb-2">{title}</h3>
    <div class="text-gray-600 text-sm md:text-base mb-3">
        <Fragment set:html={content} />
    </div>
    <a href={videoUrl} class="text-blue-600 hover:text-blue-700 underline mb-2 inline-block text-sm md:text-base" target="_blank" rel="noopener noreferrer">
        Watch Video on YouTube
    </a>
    {videoCaption && (
        <p class="text-gray-500 text-xs md:text-sm italic">{videoCaption}</p>
    )}
</div>